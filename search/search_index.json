{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Learn Dyalog APL Community APL Seeds APL Seeds: Events aimed at those who are just starting their APL journey. Chat in the APL Orchard , a very active chat room Ask a question on Stack Overflow or the r/apljk subreddit Post in the Dyalog Forums Dyalog social media: , Facebook , LinkedIn Dyalog on Social Media YouTube Mastodon Twitter other events Basics See our getting started page for a suggested learning route and recommendations for introductory materials . Advancing your Knowledge Resources to use as you become more familiar with APL: The Documentation Centre links to the full reference documentation for the Dyalog interpreter and tools. A library of Dyalog's webinars covers materials as diverse as in-depth investigations of individual primitives, source code management and creating custom user commands. APL Cart is a searchable collection of over two thousand short APL phrases intended for both beginners and professionals, with content provided by the community. APL practice problems with automated solution testing provide an opportunity to test your increasing knowledge (these are APL problem solving competition phase I questions) The 2016 Year Game provides an opportunity to practice your command of primitive functions and operators. The Dyalog user meeting provides a great opportunity to learn about Dyalog's newest features. Recordings of the presentations (and downloadable materials) are available after each of these annual events. Resources This is a general list of resources. Some of these materials are linked from places on this site. Dyalog Documentation Centre Dyalog Forums Dyalog Blog tutorials notebooks workshops presentations cultivations book","title":"Learn Dyalog APL"},{"location":"#learn-dyalog-apl","text":"","title":"Learn Dyalog APL"},{"location":"#community","text":"APL Seeds APL Seeds: Events aimed at those who are just starting their APL journey. Chat in the APL Orchard , a very active chat room Ask a question on Stack Overflow or the r/apljk subreddit Post in the Dyalog Forums Dyalog social media: , Facebook , LinkedIn Dyalog on Social Media YouTube Mastodon Twitter other events","title":"Community"},{"location":"#basics","text":"See our getting started page for a suggested learning route and recommendations for introductory materials .","title":"Basics"},{"location":"#advancing-your-knowledge","text":"Resources to use as you become more familiar with APL: The Documentation Centre links to the full reference documentation for the Dyalog interpreter and tools. A library of Dyalog's webinars covers materials as diverse as in-depth investigations of individual primitives, source code management and creating custom user commands. APL Cart is a searchable collection of over two thousand short APL phrases intended for both beginners and professionals, with content provided by the community. APL practice problems with automated solution testing provide an opportunity to test your increasing knowledge (these are APL problem solving competition phase I questions) The 2016 Year Game provides an opportunity to practice your command of primitive functions and operators. The Dyalog user meeting provides a great opportunity to learn about Dyalog's newest features. Recordings of the presentations (and downloadable materials) are available after each of these annual events.","title":"Advancing your Knowledge"},{"location":"#resources","text":"This is a general list of resources. Some of these materials are linked from places on this site. Dyalog Documentation Centre Dyalog Forums Dyalog Blog tutorials notebooks workshops presentations cultivations book","title":"Resources"},{"location":"apl-language/","text":"APL Language History Papers Language design Paradigms Array oriented Functional programming Object-oriented programming Asynchronous programming Mandelbrot set blog post Language concept tutorials Boolean Scans and Reductions Arithmetic + other Jupyter notebooks","title":"APL Language"},{"location":"apl-language/#apl-language","text":"History Papers Language design","title":"APL Language"},{"location":"apl-language/#paradigms","text":"Array oriented Functional programming Object-oriented programming Asynchronous programming Mandelbrot set blog post","title":"Paradigms"},{"location":"apl-language/#language-concept-tutorials","text":"Boolean Scans and Reductions Arithmetic + other Jupyter notebooks","title":"Language concept tutorials"},{"location":"apl-problem-solving-competition/","text":"APL Problem Solving Competition About the competition Presentations from past winners Blog posts 2022 Phase 2 Problem 3 The Heart of the Algorithm Task 1 Full APL Solution","title":"APL Problem Solving Competition"},{"location":"apl-problem-solving-competition/#apl-problem-solving-competition","text":"About the competition Presentations from past winners Blog posts 2022 Phase 2 Problem 3 The Heart of the Algorithm Task 1 Full APL Solution","title":"APL Problem Solving Competition"},{"location":"how-to/","text":"How to Do Things web communications and services reading, writing and managing external data full stack external language interfaces GUI data visualisation graphics process management APL system migration Data format conversion e.g. JSON, CSV, datetime, \u2395DR , decode/encode Neural networks Learn APL with Neural Networks Implementing the Convolutional Neural Network U-Net in APL","title":"How to Do Things"},{"location":"how-to/#how-to-do-things","text":"web communications and services reading, writing and managing external data full stack external language interfaces GUI data visualisation graphics process management APL system migration Data format conversion e.g. JSON, CSV, datetime, \u2395DR , decode/encode Neural networks Learn APL with Neural Networks Implementing the Convolutional Neural Network U-Net in APL","title":"How to Do Things"},{"location":"application-development-and-deployment/","text":"Application Development and Deployment Application writing tutorials Error Handling in Dyalog Blog post: Enhanced Debugging with Function Keys Debugging Sections of mastering dyalog Are any Dyalog.TV relevant? Development environment Link Link User Guide Video: Link 3.0 // Morten Kromberg // Dyalog '21 WIDE RIDE Cider/Dado projects TTY External editors User commands Application deployment workspaces Tatin packages standalone exe DyalogScript","title":"Application Development and Deployment"},{"location":"application-development-and-deployment/#application-development-and-deployment","text":"","title":"Application Development and Deployment"},{"location":"application-development-and-deployment/#application-writing-tutorials","text":"Error Handling in Dyalog Blog post: Enhanced Debugging with Function Keys Debugging Sections of mastering dyalog Are any Dyalog.TV relevant?","title":"Application writing tutorials"},{"location":"application-development-and-deployment/#development-environment","text":"Link Link User Guide Video: Link 3.0 // Morten Kromberg // Dyalog '21 WIDE RIDE Cider/Dado projects TTY External editors User commands","title":"Development environment"},{"location":"application-development-and-deployment/#application-deployment","text":"workspaces Tatin packages standalone exe DyalogScript","title":"Application deployment"},{"location":"application-development-and-deployment/typing-apl/","text":"Typing APL Dyalog APL's standard US English layout is as follows: \u250c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502~ \u233a \u2502! \u2336 \u2502@ \u236b \u2502# \u2352 \u2502$ \u234b \u2502% \u233d \u2502^ \u2349 \u2502& \u2296 \u2502* \u235f \u2502( \u2371 \u2502) \u2372 \u2502_ ! \u2502+ \u2339 \u2502Backspace\u2502 \u2502` \u22c4 \u25021 \u00a8 \u25022 \u00af \u25023 < \u25024 \u2264 \u25025 = \u25026 \u2265 \u25027 > \u25028 \u2260 \u25029 \u2228 \u25020 \u2227 \u2502- \u00d7 \u2502= \u00f7 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Tab \u2502Q \u2502W \u2502E \u2377 \u2502R \u2502T \u2368 \u2502Y \u2502U \u2502I \u2378 \u2502O \u2365 \u2502P \u2363 \u2502{ \u235e \u2502} \u236c \u2502| \u22a3 \u2502 \u2502 \u2502q ? \u2502w \u2375 \u2502e \u220a \u2502r \u2374 \u2502t ~ \u2502y \u2191 \u2502u \u2193 \u2502i \u2373 \u2502o \u25cb \u2502p * \u2502[ \u2190 \u2502] \u2192 \u2502\\ \u22a2 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u252c\u2500\u2500\u2500\u2534\u252c\u2500\u2500\u2500\u2534\u252c\u2500\u2500\u2500\u2534\u252c\u2500\u2500\u2500\u2534\u252c\u2500\u2500\u2500\u2534\u252c\u2500\u2500\u2500\u2534\u252c\u2500\u2500\u2500\u2534\u252c\u2500\u2500\u2500\u2534\u252c\u2500\u2500\u2500\u2534\u252c\u2500\u2500\u2500\u2534\u252c\u2500\u2500\u2500\u2534\u252c\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Caps \u2502A \u2502S \u2502D \u2502F \u2502G \u2502H \u2502J \u2364 \u2502K \u2338 \u2502L \u2337 \u2502: \u2261 \u2502\" \u2262 \u2502Enter \u2502 \u2502Lock \u2502a \u237a \u2502s \u2308 \u2502d \u230a \u2502f _ \u2502g \u2207 \u2502h \u2206 \u2502j \u2218 \u2502k ' \u2502l \u2395 \u2502; \u234e \u2502' \u2355 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Shift \u2502Z \u2286 \u2502X \u2502C \u2502V \u2502B \u2502N \u2502M \u2502< \u236a \u2502> \u2359 \u2502? \u2360 \u2502Shift \u2502 \u2502 \u2502z \u2282 \u2502x \u2283 \u2502c \u2229 \u2502v \u222a \u2502b \u22a5 \u2502n \u22a4 \u2502m | \u2502, \u235d \u2502. \u2340 \u2502/ \u233f \u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 Several international keyboard layouts exist with charts available from the dfns website . How to set up APL keyboard input APL Wiki page on Typing Glyphs Section 2.2.5 of Mastering Dyalog APL","title":"Typing APL"},{"location":"application-development-and-deployment/typing-apl/#typing-apl","text":"Dyalog APL's standard US English layout is as follows: \u250c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502~ \u233a \u2502! \u2336 \u2502@ \u236b \u2502# \u2352 \u2502$ \u234b \u2502% \u233d \u2502^ \u2349 \u2502& \u2296 \u2502* \u235f \u2502( \u2371 \u2502) \u2372 \u2502_ ! \u2502+ \u2339 \u2502Backspace\u2502 \u2502` \u22c4 \u25021 \u00a8 \u25022 \u00af \u25023 < \u25024 \u2264 \u25025 = \u25026 \u2265 \u25027 > \u25028 \u2260 \u25029 \u2228 \u25020 \u2227 \u2502- \u00d7 \u2502= \u00f7 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Tab \u2502Q \u2502W \u2502E \u2377 \u2502R \u2502T \u2368 \u2502Y \u2502U \u2502I \u2378 \u2502O \u2365 \u2502P \u2363 \u2502{ \u235e \u2502} \u236c \u2502| \u22a3 \u2502 \u2502 \u2502q ? \u2502w \u2375 \u2502e \u220a \u2502r \u2374 \u2502t ~ \u2502y \u2191 \u2502u \u2193 \u2502i \u2373 \u2502o \u25cb \u2502p * \u2502[ \u2190 \u2502] \u2192 \u2502\\ \u22a2 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u252c\u2500\u2500\u2500\u2534\u252c\u2500\u2500\u2500\u2534\u252c\u2500\u2500\u2500\u2534\u252c\u2500\u2500\u2500\u2534\u252c\u2500\u2500\u2500\u2534\u252c\u2500\u2500\u2500\u2534\u252c\u2500\u2500\u2500\u2534\u252c\u2500\u2500\u2500\u2534\u252c\u2500\u2500\u2500\u2534\u252c\u2500\u2500\u2500\u2534\u252c\u2500\u2500\u2500\u2534\u252c\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Caps \u2502A \u2502S \u2502D \u2502F \u2502G \u2502H \u2502J \u2364 \u2502K \u2338 \u2502L \u2337 \u2502: \u2261 \u2502\" \u2262 \u2502Enter \u2502 \u2502Lock \u2502a \u237a \u2502s \u2308 \u2502d \u230a \u2502f _ \u2502g \u2207 \u2502h \u2206 \u2502j \u2218 \u2502k ' \u2502l \u2395 \u2502; \u234e \u2502' \u2355 \u2502 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Shift \u2502Z \u2286 \u2502X \u2502C \u2502V \u2502B \u2502N \u2502M \u2502< \u236a \u2502> \u2359 \u2502? \u2360 \u2502Shift \u2502 \u2502 \u2502z \u2282 \u2502x \u2283 \u2502c \u2229 \u2502v \u222a \u2502b \u22a5 \u2502n \u22a4 \u2502m | \u2502, \u235d \u2502. \u2340 \u2502/ \u233f \u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 Several international keyboard layouts exist with charts available from the dfns website .","title":"Typing APL"},{"location":"application-development-and-deployment/typing-apl/#how-to-set-up-apl-keyboard-input","text":"APL Wiki page on Typing Glyphs Section 2.2.5 of Mastering Dyalog APL","title":"How to set up APL keyboard input"},{"location":"getting-started/","text":"Getting started with Dyalog APL You do not need to install anything to get started using and learning the APL language. You can get started with the materials listed here using the TryAPL online interpreter . Quick Start If you do decide to install Dyalog, the following instructions should get you up and running with a standard workflow. Installing Dyalog You can download Dyalog for free from the Dyalog website. Also see the installation instructions for the latest version of Dyalog on all platforms . Interactive REPL Editing and Debugging Dyalog APL . When you start Dyalog, you are met with a blank area with a text cursor. This is the session window. You can input APL expressions (usually indented by 6 spaces) and press enter to see their results: 1 + 2 3 To create a function you can use: the \u2395ED system command; double click on a name; or press Shift+Enter with the cursor on a name. \u2395ED 'MyFunction' You can now write a tradfn or dfn ( APL Course: User-defined Functions ) in the editor. Pressing Esc will close the editor and save your changes in the active workspace. The active workspace is the currently running set of code - functions and variables etc. Save your work Create a link between the active workspace and a folder on the file system: ] Create # /tmp/MyProject Linked : # \u2190\u2192 C:\\tmp\\MyProject [directory was created] Now, when you make a change using the editor (after closing it with Esc ), a file in that folder will be created or updated. For larger applications or complex workflows, you might want to learn about projects and packages . Quit Dyalog Use )OFF to exit Dyalog Your session log Your session log will be saved in the location specified by the LOG_FILE configuration parameter . ]Config LOG_FILE Tips Check out our page of tips suggested by users.","title":"Getting started with Dyalog APL"},{"location":"getting-started/#getting-started-with-dyalog-apl","text":"You do not need to install anything to get started using and learning the APL language. You can get started with the materials listed here using the TryAPL online interpreter .","title":"Getting started with Dyalog APL"},{"location":"getting-started/#quick-start","text":"If you do decide to install Dyalog, the following instructions should get you up and running with a standard workflow.","title":"Quick Start"},{"location":"getting-started/#installing-dyalog","text":"You can download Dyalog for free from the Dyalog website. Also see the installation instructions for the latest version of Dyalog on all platforms .","title":"Installing Dyalog"},{"location":"getting-started/#interactive-repl","text":"Editing and Debugging Dyalog APL . When you start Dyalog, you are met with a blank area with a text cursor. This is the session window. You can input APL expressions (usually indented by 6 spaces) and press enter to see their results: 1 + 2 3 To create a function you can use: the \u2395ED system command; double click on a name; or press Shift+Enter with the cursor on a name. \u2395ED 'MyFunction' You can now write a tradfn or dfn ( APL Course: User-defined Functions ) in the editor. Pressing Esc will close the editor and save your changes in the active workspace. The active workspace is the currently running set of code - functions and variables etc.","title":"Interactive REPL"},{"location":"getting-started/#save-your-work","text":"Create a link between the active workspace and a folder on the file system: ] Create # /tmp/MyProject Linked : # \u2190\u2192 C:\\tmp\\MyProject [directory was created] Now, when you make a change using the editor (after closing it with Esc ), a file in that folder will be created or updated. For larger applications or complex workflows, you might want to learn about projects and packages .","title":"Save your work"},{"location":"getting-started/#quit-dyalog","text":"Use )OFF to exit Dyalog Your session log Your session log will be saved in the location specified by the LOG_FILE configuration parameter . ]Config LOG_FILE","title":"Quit Dyalog"},{"location":"getting-started/#tips","text":"Check out our page of tips suggested by users.","title":"Tips"},{"location":"getting-started/introductions/","text":"Introductory Tutorials New to programming The book Mastering Dyalog APL by Bernard Legrand is aimed at new developers and is suitable for people with no prior programming experience. However, it is also a fairly comprehensive guide to the many aspects of both the APL language and the Dyalog development environments, and so intermediate and advanced users will still find it valuable. The book was originally published in 2009, and although it is being re-worked as an e-book to include chapters on recent features, the original is still available as a physical book . New to APL If you are already familiar with a programming language or two, the book Learning APL by Stefan Kruger offers an excellent introduction to modern APL for experienced programmers. Guided problem sets Our APL Course is a set of guided problem sets with examples and explained solutions. It aims to cover the majority of language constructs and is broader in scope than Learning APL , but not as comprehensive as Mastering Dyalog APL . Domain-specific tutorials Playlist: Learn APL with Neural Networks","title":"Introductory Tutorials"},{"location":"getting-started/introductions/#introductory-tutorials","text":"","title":"Introductory Tutorials"},{"location":"getting-started/introductions/#new-to-programming","text":"The book Mastering Dyalog APL by Bernard Legrand is aimed at new developers and is suitable for people with no prior programming experience. However, it is also a fairly comprehensive guide to the many aspects of both the APL language and the Dyalog development environments, and so intermediate and advanced users will still find it valuable. The book was originally published in 2009, and although it is being re-worked as an e-book to include chapters on recent features, the original is still available as a physical book .","title":"New to programming"},{"location":"getting-started/introductions/#new-to-apl","text":"If you are already familiar with a programming language or two, the book Learning APL by Stefan Kruger offers an excellent introduction to modern APL for experienced programmers.","title":"New to APL"},{"location":"getting-started/introductions/#guided-problem-sets","text":"Our APL Course is a set of guided problem sets with examples and explained solutions. It aims to cover the majority of language constructs and is broader in scope than Learning APL , but not as comprehensive as Mastering Dyalog APL .","title":"Guided problem sets"},{"location":"getting-started/introductions/#domain-specific-tutorials","text":"Playlist: Learn APL with Neural Networks","title":"Domain-specific tutorials"},{"location":"getting-started/learning-route/","text":"Suggested Learning Route With so many resources available, it can be hard to know where to start. Recommendation only This is just a recommendation. After learning the basics of Dyalog, we hope this site will help you navigate resources relevant to your particular area of interest. Whet your appetite These videos give a flavour of what it looks like to use APL: The Heart of the Algorithm Easy to Learn, Worth Mastering Will You Play APL With Me? Start playing with the TryAPL tutorials You don't have to install anything to get started. Enter glyphs by clicking the language bar at the top of the page, or using the prefix entry method. For example, on a U.S. keyboard, backtick ( ` ), in the top-left of the keyboard) followed by = gives \u00f7 . Go to the Try APL tutorials Follow one of our recommended introductory texts At some point, you will feel restricted by the limitations of TryAPL. We recommend installing Dyalog for the best experience. Learn the basics of the Dyalog interface Playlist: Dyalog Programming Environment Basics Look at examples to learn new techniques and approaches to solving problems rosetta code dfns workspace advent of code Try solving some problems yourself. Some of these have public examples of solutions that you can study advent of code","title":"Suggested Learning Route"},{"location":"getting-started/learning-route/#suggested-learning-route","text":"With so many resources available, it can be hard to know where to start. Recommendation only This is just a recommendation. After learning the basics of Dyalog, we hope this site will help you navigate resources relevant to your particular area of interest. Whet your appetite These videos give a flavour of what it looks like to use APL: The Heart of the Algorithm Easy to Learn, Worth Mastering Will You Play APL With Me? Start playing with the TryAPL tutorials You don't have to install anything to get started. Enter glyphs by clicking the language bar at the top of the page, or using the prefix entry method. For example, on a U.S. keyboard, backtick ( ` ), in the top-left of the keyboard) followed by = gives \u00f7 . Go to the Try APL tutorials Follow one of our recommended introductory texts At some point, you will feel restricted by the limitations of TryAPL. We recommend installing Dyalog for the best experience. Learn the basics of the Dyalog interface Playlist: Dyalog Programming Environment Basics Look at examples to learn new techniques and approaches to solving problems rosetta code dfns workspace advent of code Try solving some problems yourself. Some of these have public examples of solutions that you can study advent of code","title":"Suggested Learning Route"}]}